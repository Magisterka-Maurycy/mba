plugins {
    id("org.jetbrains.kotlin.jvm") version "1.8.21"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.8.21"
    id("org.jetbrains.dokka") version "1.8.10"
    id("org.sonarqube") version "4.0.0.2929"
    id("org.owasp.dependencycheck") version "8.2.1"
    id("jacoco")
    id("io.quarkus")
    id("pl.allegro.tech.build.axion-release") version "1.15.1"
}

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    implementation("org.bouncycastle:bcpkix-jdk15on:1.70")
    implementation("org.bouncycastle:bcprov-jdk15on:1.70")
    implementation("org.bouncycastle:bcprov-ext-jdk15on:1.70")

    implementation(enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}"))
    implementation("io.quarkus:quarkus-oidc")
    implementation("io.quarkus:quarkus-mutiny")
    implementation("io.quarkus:quarkus-resteasy-reactive-jackson")
    implementation("io.quarkus:quarkus-smallrye-fault-tolerance")
    implementation("io.quarkus:quarkus-micrometer-registry-prometheus")
    implementation("io.quarkus:quarkus-smallrye-health")
    implementation("io.quarkus:quarkus-mongodb-panache-kotlin")
    implementation("io.quarkus:quarkus-openshift")
    implementation("io.quarkus:quarkus-kubernetes")
    implementation("io.quarkus:quarkus-container-image-jib")
    implementation("io.quarkus:quarkus-smallrye-openapi")
    implementation("io.quarkus:quarkus-logging-gelf")
    implementation("io.quarkus:quarkus-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("io.quarkus:quarkus-arc")

    testImplementation("io.quarkus:quarkus-jacoco")
    testImplementation("io.quarkus:quarkus-junit5")
    testImplementation("io.rest-assured:rest-assured")
    testImplementation("io.quarkus:quarkus-junit5-mockito")
    //Downgraded javafaker because of problems with snakeyaml-android.jar TODO: find alternative to javafaker
    testImplementation('com.github.javafaker:javafaker:0.12')
    testImplementation("io.quarkus:quarkus-test-security")
}

group = "org.maurycy.framework"
version scmVersion.version

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    finalizedBy jacocoTestReport
    jacoco {
        excludeClassLoaders = ["*QuarkusClassLoader"]
        destinationFile = layout.buildDirectory.file("jacoco-quarkus.exec").get().asFile
    }
    jacocoTestReport.enabled = false
    reports {
        junitXml.required.set(true)
    }
}


allOpen {
    annotation("jakarta.ws.rs.Path")
    annotation("jakarta.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

dependencyCheck {
    failBuildOnCVSS = 7.0f // fail on high or critical CVE
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
}


sonar {
    properties {
        property("sonar.projectKey", "mba")
        property("sonar.coverage.jacoco.xmlReportPaths", "build/jacoco-report/jacoco.xml")
    }
}

currentVersion.doNotTrackState("")
